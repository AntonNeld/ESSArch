# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-02-23 10:16
from __future__ import unicode_literals

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('configuration', '0005_defaultcolumnvisible_defaultsorting_defaultvalue'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArchivePolicy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('policy_id', models.CharField(max_length=32, unique=True, verbose_name=b'Policy ID')),
                ('policy_name', models.CharField(max_length=255, verbose_name=b'Policy Name')),
                ('policy_stat', models.BooleanField(default=False, verbose_name=b'Policy Status')),
                ('ais_project_name', models.CharField(blank=True, max_length=255, verbose_name=b'AIS Policy Name')),
                ('ais_project_id', models.CharField(blank=True, max_length=255, verbose_name=b'AIS Policy ID')),
                ('mode', models.IntegerField(choices=[(0, b'master'), (2, b'ais')], default=0)),
                ('wait_for_approval', models.IntegerField(choices=[(0, b'no'), (2, b'ingestrequest')], default=2, verbose_name=b'Wait for approval')),
                ('checksum_algorithm', models.IntegerField(choices=[(1, b'md5'), (2, b'sha-256')], default=1, verbose_name=b'Checksum algorithm')),
                ('validate_checksum', models.BooleanField(default=True, verbose_name=b'Validate checksum')),
                ('validate_xml', models.BooleanField(default=True, verbose_name=b'Validate XML')),
                ('ip_type', models.IntegerField(choices=[(1, b'tar')], default=1, verbose_name=b'IP type')),
                ('preingest_metadata', models.IntegerField(choices=[(0, b'disabled'), (1, b'res')], default=0, verbose_name=b'Pre ingest metadata')),
                ('ingest_metadata', models.IntegerField(choices=[(1, b'mets'), (4, b'mets (eard)')], default=4, verbose_name=b'Ingest metadata')),
                ('information_class', models.IntegerField(choices=[(0, b'0'), (1, b'1'), (2, b'2'), (3, b'3'), (4, b'4')], default=0, verbose_name=b'Information class')),
                ('ingest_delete', models.BooleanField(default=True, verbose_name=b'Delete SIP after success to create AIP')),
            ],
            options={
                'ordering': ['policy_name'],
            },
        ),
    ]
