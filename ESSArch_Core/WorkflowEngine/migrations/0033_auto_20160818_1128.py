"""
    ESSArch is an open source archiving and digital preservation system

    ESSArch Tools for Producer (ETP)
    Copyright (C) 2005-2017 ES Solutions AB

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>.

    Contact information:
    Web - http://www.essolutions.se
    Email - essarch@essolutions.se
"""

# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-08-18 11:28
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('WorkflowEngine', '0032_processstep_parallel'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('eventIdentifierValue', models.CharField(max_length=36, unique=True)),
                ('eventDateTime', models.DateTimeField(null=True)),
                ('eventDetail', models.CharField(max_length=255)),
                ('eventApplication', models.CharField(max_length=50)),
                ('eventVersion', models.CharField(max_length=45)),
                ('eventOutcome', models.IntegerField(null=True)),
                ('eventOutcomeDetailNote', models.CharField(max_length=1024)),
                ('linkingAgentIdentifierValue', models.CharField(max_length=45)),
                ('archiveObject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='WorkflowEngine.ArchiveObject')),
            ],
            options={
                'db_table': 'Event',
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.IntegerField(null=True)),
                ('desc_sv', models.CharField(max_length=100)),
                ('desc_en', models.CharField(max_length=100)),
                ('localDB', models.IntegerField(null=True)),
                ('externalDB', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'EventType',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='eventType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WorkflowEngine.EventType'),
        ),
    ]
